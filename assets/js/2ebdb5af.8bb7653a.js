"use strict";(self.webpackChunktuyaopen_io_website=self.webpackChunktuyaopen_io_website||[]).push([[8920],{16509:(e,l,n)=>{n.r(l),n.d(l,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"tkl-api/tkl_flash","title":"tkl_flash | Flash Driver","description":"The tkl_flash.c file is automatically generated by the TuyaOS v&v tool and provides basic operation functions for Flash storage, including reading, writing, erasing Flash, and obtaining Flash information. In the automatically generated code framework, developers can add their own implementations between the \\"BEGIN\\" and \\"END\\" comments to maintain the persistence of user code.","source":"@site/docs/tkl-api/tkl_flash.md","sourceDirName":"tkl-api","slug":"/tkl-api/tkl_flash","permalink":"/docs/tkl-api/tkl_flash","draft":false,"unlisted":false,"editUrl":"https://github.com/Tuya-Community/TuyaOpen.io/edit/master/docs/tkl-api/tkl_flash.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"tkl_dac | DAC Driver","permalink":"/docs/tkl-api/tkl_dac"},"next":{"title":"tkl_gipo | GPIO Driver","permalink":"/docs/tkl-api/tkl_gpio"}}');var i=n(74848),t=n(28453);const s={},a="tkl_flash | Flash Driver",d={},o=[{value:"API Description",id:"api-description",level:2},{value:"tkl_flash_read",id:"tkl_flash_read",level:3},{value:"Functionality",id:"functionality",level:4},{value:"Parameters",id:"parameters",level:4},{value:"Return Value",id:"return-value",level:4},{value:"tkl_flash_write",id:"tkl_flash_write",level:3},{value:"Functionality",id:"functionality-1",level:4},{value:"Parameters",id:"parameters-1",level:4},{value:"Return Value",id:"return-value-1",level:4},{value:"tkl_flash_erase",id:"tkl_flash_erase",level:3},{value:"Functionality",id:"functionality-2",level:4},{value:"Parameters",id:"parameters-2",level:4},{value:"Return Value",id:"return-value-2",level:4},{value:"tkl_flash_lock/unlock",id:"tkl_flash_lockunlock",level:3},{value:"Functionality",id:"functionality-3",level:4},{value:"Parameters",id:"parameters-3",level:4},{value:"Return Value",id:"return-value-3",level:4},{value:"tkl_flash_get_one_type_info",id:"tkl_flash_get_one_type_info",level:3},{value:"Functionality",id:"functionality-4",level:4},{value:"Parameters",id:"parameters-4",level:4},{value:"Return Value",id:"return-value-4",level:4},{value:"Notes",id:"notes",level:4}];function c(e){const l={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(l.header,{children:(0,i.jsx)(l.h1,{id:"tkl_flash--flash-driver",children:"tkl_flash | Flash Driver"})}),"\n",(0,i.jsxs)(l.p,{children:["The ",(0,i.jsx)(l.code,{children:"tkl_flash.c"}),' file is automatically generated by the TuyaOS v&v tool and provides basic operation functions for Flash storage, including reading, writing, erasing Flash, and obtaining Flash information. In the automatically generated code framework, developers can add their own implementations between the "BEGIN" and "END" comments to maintain the persistence of user code.']}),"\n",(0,i.jsx)(l.h2,{id:"api-description",children:"API Description"}),"\n",(0,i.jsx)(l.h3,{id:"tkl_flash_read",children:"tkl_flash_read"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-c",children:"OPERATE_RET tkl_flash_read(uint32_t addr, uint8_t *dst, uint32_t size);\n"})}),"\n",(0,i.jsx)(l.h4,{id:"functionality",children:"Functionality"}),"\n",(0,i.jsx)(l.p,{children:"Reads data from Flash."}),"\n",(0,i.jsx)(l.h4,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"addr"}),": The Flash address to read from."]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"dst"}),": Pointer to the buffer where the read data will be stored."]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"size"}),": The size of the data to read."]}),"\n"]}),"\n",(0,i.jsx)(l.h4,{id:"return-value",children:"Return Value"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"OPRT_OK"}),": Read operation successful."]}),"\n",(0,i.jsxs)(l.li,{children:["Other error codes: Please refer to ",(0,i.jsx)(l.code,{children:"tuya_error_code.h"}),"."]}),"\n"]}),"\n",(0,i.jsx)(l.h3,{id:"tkl_flash_write",children:"tkl_flash_write"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-c",children:"OPERATE_RET tkl_flash_write(uint32_t addr, const uint8_t *src, uint32_t size);\n"})}),"\n",(0,i.jsx)(l.h4,{id:"functionality-1",children:"Functionality"}),"\n",(0,i.jsx)(l.p,{children:"Writes data to Flash."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"addr"}),": The Flash address to write to."]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"src"}),": Pointer to the buffer containing the data to write."]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"size"}),": The size of the data to write."]}),"\n"]}),"\n",(0,i.jsx)(l.h4,{id:"return-value-1",children:"Return Value"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"OPRT_OK"}),": Write operation successful."]}),"\n",(0,i.jsxs)(l.li,{children:["Other error codes: Please refer to ",(0,i.jsx)(l.code,{children:"tuya_error_code.h"}),"."]}),"\n"]}),"\n",(0,i.jsx)(l.h3,{id:"tkl_flash_erase",children:"tkl_flash_erase"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-c",children:"OPERATE_RET tkl_flash_erase(uint32_t addr, uint32_t size);\n"})}),"\n",(0,i.jsx)(l.h4,{id:"functionality-2",children:"Functionality"}),"\n",(0,i.jsx)(l.p,{children:"Erases data from Flash."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"addr"}),": The Flash address to erase."]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"size"}),": The size of the Flash block to erase."]}),"\n"]}),"\n",(0,i.jsx)(l.h4,{id:"return-value-2",children:"Return Value"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"OPRT_OK"}),": Erase operation successful."]}),"\n",(0,i.jsxs)(l.li,{children:["Other error codes: Please refer to ",(0,i.jsx)(l.code,{children:"tuya_error_code.h"}),"."]}),"\n"]}),"\n",(0,i.jsx)(l.h3,{id:"tkl_flash_lockunlock",children:"tkl_flash_lock/unlock"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-c",children:"OPERATE_RET tkl_flash_lock(uint32_t addr, uint32_t size);\nOPERATE_RET tkl_flash_unlock(uint32_t addr, uint32_t size);\n"})}),"\n",(0,i.jsx)(l.h4,{id:"functionality-3",children:"Functionality"}),"\n",(0,i.jsx)(l.p,{children:"Locks or unlocks a region of Flash. These functions are currently implemented as unsupported operations."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"addr"}),": The starting Flash address to lock or unlock."]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"size"}),": The size of the region to lock or unlock."]}),"\n"]}),"\n",(0,i.jsx)(l.h4,{id:"return-value-3",children:"Return Value"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"OPRT_OK"}),": Lock or unlock operation successful."]}),"\n",(0,i.jsxs)(l.li,{children:["Other error codes: Please refer to ",(0,i.jsx)(l.code,{children:"tuya_error_code.h"}),"."]}),"\n"]}),"\n",(0,i.jsx)(l.h3,{id:"tkl_flash_get_one_type_info",children:"tkl_flash_get_one_type_info"}),"\n",(0,i.jsx)(l.pre,{children:(0,i.jsx)(l.code,{className:"language-c",children:"OPERATE_RET tkl_flash_get_one_type_info(TUYA_FLASH_TYPE_E type, TUYA_FLASH_BASE_INFO_T* info);\n"})}),"\n",(0,i.jsx)(l.h4,{id:"functionality-4",children:"Functionality"}),"\n",(0,i.jsx)(l.p,{children:"Obtains information for a specified Flash type."}),"\n",(0,i.jsx)(l.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"type"}),": The Flash type for which to query information."]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"info"}),": Pointer to a structure where Flash information will be stored, typically the layout of a storage type in Flash."]}),"\n"]}),"\n",(0,i.jsx)(l.h4,{id:"return-value-4",children:"Return Value"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"OPRT_OK"}),": Information successfully obtained."]}),"\n",(0,i.jsxs)(l.li,{children:["Other error codes: Please refer to ",(0,i.jsx)(l.code,{children:"tuya_error_code.h"}),"."]}),"\n"]}),"\n",(0,i.jsx)(l.h4,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(l.ul,{children:["\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"TUYA_FLASH_TYPE_E"})," is an enumeration for Flash types."]}),"\n",(0,i.jsxs)(l.li,{children:[(0,i.jsx)(l.code,{children:"TUYA_FLASH_BASE_INFO_T"})," is a structure for Flash information."]}),"\n"]})]})}function h(e={}){const{wrapper:l}={...(0,t.R)(),...e.components};return l?(0,i.jsx)(l,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,l,n)=>{n.d(l,{R:()=>s,x:()=>a});var r=n(96540);const i={},t=r.createContext(i);function s(e){const l=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(l):{...l,...e}},[l,e])}function a(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(t.Provider,{value:l},e.children)}}}]);