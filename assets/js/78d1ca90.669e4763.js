"use strict";(self.webpackChunktuyaopen_io_website=self.webpackChunktuyaopen_io_website||[]).push([[4004],{7329:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"new_hardware/adding-new-chip-platform-support","title":"Adding New Chip Platform","description":"Introduction","source":"@site/docs/new_hardware/adding-new-chip-platform-support.md","sourceDirName":"new_hardware","slug":"/new_hardware/adding-new-chip-platform-support","permalink":"/docs/new_hardware/adding-new-chip-platform-support","draft":false,"unlisted":false,"editUrl":"https://github.com/Tuya-Community/TuyaOpen.io/edit/master/docs/new_hardware/adding-new-chip-platform-support.md","tags":[],"version":"current","frontMatter":{"title":"Adding New Chip Platform"},"sidebar":"docs","previous":{"title":"Display Driver","permalink":"/docs/peripheral/display"},"next":{"title":"Adding New Boards","permalink":"/docs/new_hardware/adding-new-board-support"}}');var r=t(4848),o=t(8453);const a={title:"Adding New Chip Platform"},l="Adding New Chip Platform",s={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Platform Adaptation",id:"platform-adaptation",level:2},{value:"Generate New Platform Directory",id:"generate-new-platform-directory",level:3},{value:"Completing Adaptation",id:"completing-adaptation",level:2},{value:"Kconfig Configuration",id:"kconfig-configuration",level:3},{value:"platform_config.cmake",id:"platform_configcmake",level:3},{value:"toolchain_file.cmake",id:"toolchain_filecmake",level:3},{value:"Updating platform_config.yaml",id:"updating-platform_configyaml",level:3},{value:"Compilation",id:"compilation",level:3},{value:"Interface Implementation",id:"interface-implementation",level:2},{value:"Example Projects",id:"example-projects",level:2},{value:"Testing",id:"testing",level:2},{value:"Submission",id:"submission",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"adding-new-chip-platform",children:"Adding New Chip Platform"})}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/tuya/TuyaOpen",children:"TuyaOpen"})," manages platforms using the ",(0,r.jsx)(n.code,{children:"platform_config.yaml"})," file. The ",(0,r.jsx)(n.code,{children:"platform/platform_config.yaml"})," file contains repository information of platforms that have implemented common interfaces. Configure ",(0,r.jsx)(n.code,{children:"platform"})," and ",(0,r.jsx)(n.code,{children:"chip"})," (if the platform supports multiple chips) in the project's ",(0,r.jsx)(n.code,{children:"project_build.ini"})," file. After running tos compilation, the target platform will automatically download the corresponding platform repository and link it to the ",(0,r.jsx)(n.code,{children:"TuyaOpen"})," project."]}),"\n",(0,r.jsxs)(n.p,{children:["If you wish to port ",(0,r.jsx)(n.code,{children:"TuyaOpen"})," to your own chip, platform adaptation is required."]}),"\n",(0,r.jsx)(n.h2,{id:"platform-adaptation",children:"Platform Adaptation"}),"\n",(0,r.jsx)(n.h3,{id:"generate-new-platform-directory",children:"Generate New Platform Directory"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Download and enter the ",(0,r.jsx)(n.code,{children:"TuyaOpen"})," directory, then set environment variables:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ cd TuyaOpen\n$ . ./export.sh     #ubuntu\n"})}),"\n",(0,r.jsx)(n.p,{children:"Or add the TuyaOpen path to your system environment variables."}),"\n",(0,r.jsxs)(n.p,{children:["TuyaOpen uses the ",(0,r.jsx)(n.code,{children:"tos.py"})," command for compilation and debugging operations. The ",(0,r.jsx)(n.code,{children:"tos.py"})," command locates the TuyaOpen repository through the path set in environment variables."]}),"\n",(0,r.jsxs)(n.p,{children:["For detailed usage of the ",(0,r.jsx)(n.code,{children:"tos.py"})," command, refer to ",(0,r.jsx)(n.a,{href:"/docs/quick_start/tos-guide",children:"tos.py Guide"}),"."]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Generate a new platform subdirectory:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ tos new_platform <new-platform-name>\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This command will automatically launch a ",(0,r.jsx)(n.code,{children:"menuconfig"})," dialog during platform creation:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-shell",children:"$ tos new_platform <new-platform-name>\n(1.0.0) PROJECT_VERSION (NEW)\n    configure TuyaOpen  ---\x3e\n        configure tuya cloud service  ---\x3e\n        configure enable/disable liblwip  ---\x3e\n        configure enable/disable libtflm  ---\x3e\n        configure mbedtls  ---\x3e\n        configure system parameter  ---\x3e\n    configure board <your-board-name>  ---\x3e\n        OPERATING_SYSTEM (RTOS)  ---\x3e\n        ENDIAN (LITTLE_ENDIAN)  ---\x3e\n        [ ] ENABLE_FILE_SYSTEM --- support filesystem (NEW)\n        [ ] ENABLE_WIFI --- support wifi (NEW)\n        [*] ENABLE_WIRED --- support wired (NEW)\n        [ ] ENABLE_BLUETOOTH --- support BLE (NEW)  ----\n        [ ] ENABLE_RTC --- support rtc (NEW)\n        [ ] ENABLE_WATCHDOG --- support watchdog (NEW)\n        [*] ENABLE_UART --- support uart (NEW)\n        [*] ENABLE_FLASH --- support flash (NEW)  ---\x3e\n        [ ] ENABLE_ADC --- support adc (NEW)\n        [ ] ENABLE_PWM --- support pwm (NEW)\n        [*] ENABLE_GPIO --- support gpio (NEW)\n        [ ] ENABLE_I2C --- support i2c (NEW)\n        [ ] ENABLE_SPI --- support spi (NEW)\n        [ ] ENABLE_TIMER --- support hw timer (NEW)\n        [ ] ENABLE_DISPLAY --- support GUI display (NEW)\n        [ ] ENABLE_MEDIA --- support media (NEW)\n        [ ] ENABLE_PM --- support power manager (NEW)\n        [ ] ENABLE_STORAGE --- support storage such as SDCard (NEW)\n        [ ] ENABLE_DAC --- support dac (NEW)\n        [ ] ENABLE_I2S --- support i2s (NEW)\n        [ ] ENABLE_WAKEUP --- support lowpower wakeup (NEW)\n        [ ] ENABLE_REGISTER --- support register (NEW)\n        [ ] ENABLE_PINMUX --- support pinmux (NEW)\n        [ ] ENABLE_PLATFORM_AES --- support hw AES (NEW)\n        [ ] ENABLE_PLATFORM_SHA256 --- support hw sha256 (NEW)\n        [ ] ENABLE_PLATFORM_MD5 --- support hw md5 (NEW)\n        [ ] ENABLE_PLATFORM_SHA1 --- support hw sha1 (NEW)\n        [ ] ENABLE_PLATFORM_RSA --- support hw rsa (NEW)\n        [ ] ENABLE_PLATFORM_ECC --- support hw ecc (NEW)\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Configure default software features in ",(0,r.jsx)(n.code,{children:"TuyaOpen"})," based on new platform capabilities"]}),"\n",(0,r.jsxs)(n.li,{children:["Configure default hardware features in ",(0,r.jsx)(n.code,{children:"configure board <your-board-name>"})]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["After configuration, save changes (shortcut ",(0,r.jsx)(n.code,{children:"S"}),") and exit (shortcut ",(0,r.jsx)(n.code,{children:"Q"}),") to generate the default configuration ",(0,r.jsx)(n.code,{children:"default.config"})]}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"tos new_platform"})," command generates the new platform directory and creates TKL interface layer code based on menuconfig selections."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Log output during generation:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"..............\n    make ability: system\n        new file: tkl_sleep.c\n        new file: tkl_memory.c\n        new file: tkl_output.c\n        new file: tkl_semaphore.c\n        new file: tkl_queue.c\n        new file: tkl_system.c\n        new file: tkl_fs.c\n        new file: tkl_ota.c\n        new file: tkl_thread.c\n        new file: tkl_mutex.c\n    make ability: uart\n        new file: tkl_uart.c\n    make ability: security\ngenerate code finished!\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The message ",(0,r.jsx)(n.code,{children:"generate code finished!"})," indicates successful template generation."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Note: Log details may vary slightly depending on configuration options"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"The generated directory structure:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"- platform\n    + t2\n    + ubuntu\n    - <new-platform-name>\n        + <new-platform-sdk>       # Create manually for chip SDK\n        + toolchain                # Create manually for toolchain\n        + tuyaos                   # TuyaOS adaptation layer\n            - tuyaos_adapter       # Interface source code\n                - include\n                - src\n        - Kconfig                   # Configurable items\n        - default.config            # Default platform configuration\n        - platform_config.cmake     # Adaptation layer paths\n        - toolchain_file.cmake      # Compilation tool paths\n        - build_example.sh          # Build script\n"})}),"\n",(0,r.jsx)(n.h2,{id:"completing-adaptation",children:"Completing Adaptation"}),"\n",(0,r.jsx)(n.h3,{id:"kconfig-configuration",children:"Kconfig Configuration"}),"\n",(0,r.jsxs)(n.p,{children:["Modify the ",(0,r.jsx)(n.code,{children:"<your-board-name>"})," in Kconfig to match your platform name:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'menu "configure board <your-board-name>"\n    ...\n    endmenu\n'})}),"\n",(0,r.jsx)(n.h3,{id:"platform_configcmake",children:"platform_config.cmake"}),"\n",(0,r.jsx)(n.p,{children:"This file defines adaptation layer paths. Normally no modification needed:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"list_subdirectories(PLATFORM_PUBINC ${PLATFORM_PATH}/tuyaos/tuyaos_adapter)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"toolchain_filecmake",children:"toolchain_file.cmake"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Set toolchain paths:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'set(TOOLCHAIN_DIR "${PLATFORM_PATH}/toolchain/<your-toolchain-name>")\nset(TOOLCHAIN_PRE "<your-toolchain-prefix>")\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Set compilation flags:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'set(CMAKE_C_FLAGS "<your-compiler-c-flags>")\n'})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:["Implement ",(0,r.jsx)(n.code,{children:"build_example.sh"})," for SDK compilation and firmware generation."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"updating-platform_configyaml",children:"Updating platform_config.yaml"}),"\n",(0,r.jsx)(n.p,{children:"Add new platform entry:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"- name: t3\n  repo: https://github.com/tuya/TuyaOpen-platform-t3\n  commit: master\n"})}),"\n",(0,r.jsx)(n.p,{children:"For multi-chip platforms:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"- name: new_platform\n  repo: https://github.com/xxxx/new_platform\n  commit: master\n  chip:\n    - chip1\n    - chip2\n    - chip3\n"})}),"\n",(0,r.jsx)(n.h3,{id:"compilation",children:"Compilation"}),"\n",(0,r.jsxs)(n.p,{children:["Update ",(0,r.jsx)(n.code,{children:"project_build.ini"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"[project:sample_project_<new-platform-name>]\nplatform = <new-platform-name>\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then compile:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"$ cd examples/get-started/sample_project\n$ tos.py build\n"})}),"\n",(0,r.jsx)(n.h2,{id:"interface-implementation",children:"Interface Implementation"}),"\n",(0,r.jsxs)(n.p,{children:["Implement empty functions in ",(0,r.jsx)(n.code,{children:"tuyaos/tuyaos_adapter/src/"}),". Refer to:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://developer.tuya.com/cn/docs/iot-device-dev/TuyaOS-translation_linux?id=Kcrwrf72ciez5#title-1-Adapt-RTC",children:"TuyaOS Linux Porting Guide"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://developer.tuya.com/cn/docs/iot-device-dev/TuyaOS-translation_rtos?id=Kcrwraf21847l#title-1-Adapt-entry-point",children:"RTOS Porting Guide"})}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Warning: Peripheral interfaces are not mandatory but recommended for full functionality"}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Note: Implement network drivers for external NIC configurations"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"example-projects",children:"Example Projects"}),"\n",(0,r.jsx)(n.p,{children:"TuyaOpen provides various examples:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"TuyaOpen\n\u251c\u2500\u2500 ai\n\u2502   \u2514\u2500\u2500 llm_demo\n\u2502   \u2514\u2500\u2500 tflm\n\u2502       \u2514\u2500\u2500 hello_world\n\u2502       \u2514\u2500\u2500 micro_speech\n\u2502       \u2514\u2500\u2500 person_detection\n\u251c\u2500\u2500 ble\n\u2502   \u251c\u2500\u2500 ble_central\n\u2502   \u2514\u2500\u2500 ble_peripher\n\u251c\u2500\u2500 get-started\n\u2502   \u2514\u2500\u2500 sample_project\n\u251c\u2500\u2500 peripherals\n\u2502   \u251c\u2500\u2500 adc\n\u2502   \u251c\u2500\u2500 gpio\n\u2502   \u251c\u2500\u2500 i2c\n\u2502   \u251c\u2500\u2500 pwm\n\u2502   \u251c\u2500\u2500 spi\n\u2502   \u251c\u2500\u2500 timer\n\u2502   \u2514\u2500\u2500 watchdog\n\u251c\u2500\u2500 protocols\n\u2502   \u251c\u2500\u2500 http_client\n\u2502   \u251c\u2500\u2500 mqtt\n\u2502   \u251c\u2500\u2500 tcp_client\n\u2502   \u2514\u2500\u2500 tcp_server\n\u2514\u2500\u2500 wifi\n    \u251c\u2500\u2500 ap\n    \u251c\u2500\u2500 low_power\n    \u251c\u2500\u2500 scan\n    \u2514\u2500\u2500 sta\n"})}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsxs)(n.p,{children:["Refer to test documentation for comprehensive validation: ",(0,r.jsx)(n.a,{href:"https://drive.weixin.qq.com/s?k=AGQAugfWAAkb5lIvFsAEgAwQZJALE",children:"Test Case Documentation"})]}),"\n",(0,r.jsx)(n.h2,{id:"submission",children:"Submission"}),"\n",(0,r.jsx)(n.p,{children:"Submit adapted platforms via Pull Requests:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Process reference: ",(0,r.jsx)(n.a,{href:"/docs/contribute/contribute-guide",children:"Contribution Guide"})]}),"\n",(0,r.jsxs)(n.li,{children:["Coding standards: ",(0,r.jsx)(n.a,{href:"/docs/contribute/coding-style-guide",children:"Code Style Guide"})]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(6540);const r={},o=i.createContext(r);function a(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);