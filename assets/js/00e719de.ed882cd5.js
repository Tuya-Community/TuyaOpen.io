"use strict";(self.webpackChunktuyaopen_io_website=self.webpackChunktuyaopen_io_website||[]).push([[9964],{28453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>t});var i=r(96540);const o={},a=i.createContext(o);function d(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),i.createElement(a.Provider,{value:n},e.children)}},71334:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>s});const i=JSON.parse('{"id":"new-hardware/new-board","title":"Create board","description":"This document is for developers who have designed a new hardware development board and need to do some driver initialization and adaptation work for this new development board.","source":"@site/docs/new-hardware/new-board.md","sourceDirName":"new-hardware","slug":"/new-hardware/new-board","permalink":"/docs/new-hardware/new-board","draft":false,"unlisted":false,"editUrl":"https://github.com/Tuya-Community/TuyaOpen.io/edit/master/docs/new-hardware/new-board.md","tags":[],"version":"current","frontMatter":{"title":"Create board"},"sidebar":"docs","previous":{"title":"Create platform","permalink":"/docs/new-hardware/new-platform"},"next":{"title":"Create project","permalink":"/docs/new-hardware/new-project"}}');var o=r(74848),a=r(28453);const d={title:"Create board"},t="Create board",l={},s=[{value:"Overview",id:"overview",level:2},{value:"Board Naming",id:"board-naming",level:2},{value:"Mandatory Fields",id:"mandatory-fields",level:3},{value:"Optional Fields",id:"optional-fields",level:3},{value:"Naming Rules",id:"naming-rules",level:3},{value:"Operation Principle",id:"operation-principle",level:2},{value:"Next Steps",id:"next-steps",level:2},{value:"Verify Compilation",id:"verify-compilation",level:3},{value:"Adapt Development Board",id:"adapt-development-board",level:3},{value:"Adjust Configuration",id:"adjust-configuration",level:3},{value:"Save Configuration",id:"save-configuration",level:3},{value:"FAQ",id:"faq",level:2},{value:"How to delete a created board",id:"how-to-delete-a-created-board",level:3},{value:"Modify the name of an already created board",id:"modify-the-name-of-an-already-created-board",level:3}];function c(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsxs)(n.h1,{id:"create-board",children:["Create ",(0,o.jsx)(n.code,{children:"board"})]})}),"\n",(0,o.jsx)(n.p,{children:"This document is for developers who have designed a new hardware development board and need to do some driver initialization and adaptation work for this new development board."}),"\n",(0,o.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"tos.py new board"})," is a command-line tool provided by TuyaOpen SDK."]}),"\n",(0,o.jsxs)(n.p,{children:["It is used to quickly create a new hardware development board support package based on chip platforms already supported by ",(0,o.jsx)(n.code,{children:"TuyaOpen"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"This command helps developers quickly add new development board configurations for existing chip platforms through an interactive interface and template system, greatly simplifying the workflow of hardware porting and adaptation."}),"\n",(0,o.jsx)(n.h2,{id:"board-naming",children:"Board Naming"}),"\n",(0,o.jsx)(n.h3,{id:"mandatory-fields",children:"Mandatory Fields"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:'Manufacturer name: Represents the board manufacturer (e.g. "TUYA" for Tuya\'s boards)'}),"\n",(0,o.jsx)(n.li,{children:'Chip name: Platform name (e.g. "T2", "T5AI")'}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"optional-fields",children:"Optional Fields"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:'Key features: Indicate special functionalities (e.g. "LCD", "CAM")'}),"\n",(0,o.jsx)(n.li,{children:"Series and version: For products with series variations"}),"\n",(0,o.jsx)(n.li,{children:"Other identifiers: Additional hardware markers"}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"naming-rules",children:"Naming Rules"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"UPPERCASE letters only"}),"\n",(0,o.jsx)(n.li,{children:"Fields separated by underscores"}),"\n",(0,o.jsx)(n.li,{children:"Order: Manufacturer_CoreBoardName_OptionalFields"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Example: ",(0,o.jsx)(n.code,{children:"TUYA_T5AI_BOARD"})]}),"\n",(0,o.jsx)(n.h2,{id:"operation-principle",children:"Operation Principle"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Use the command ",(0,o.jsx)(n.code,{children:"tos.py new board"})," to select the target platform"]}),"\n",(0,o.jsx)(n.p,{children:"After executing the command, the system will list all available hardware platforms:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'[INFO]: Running tos.py ...\n--------------------\n1. BK7231X\n2. ESP32\n3. LN882H\n4. T2\n5. T3\n6. T5AI\n7. Ubuntu\n--------------------\nInput "q" to exit.\nChoice platform: 6\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Use the arrow keys to select your target platform (here we use ",(0,o.jsx)(n.code,{children:"T5AI"})," as an example), and press Enter to confirm."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Enter board name"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"[NOTE] Input new board name.\ninput: MY_CUSTOM_BOARD\n"})}),"\n",(0,o.jsx)(n.p,{children:"Enter the new development board name. It is recommended to use:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"English uppercase letters"}),"\n",(0,o.jsx)(n.li,{children:"Underscores to separate words"}),"\n",(0,o.jsx)(n.li,{children:"Avoid using special characters"}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Automatically generate files"}),"\n",(0,o.jsx)(n.p,{children:"The system will automatically create the following file structure:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"boards/<platform>/<board_name>/\n\u251c\u2500\u2500 Kconfig           # Board-level configuration file\n\u251c\u2500\u2500 CMakeLists.txt    # CMake build configuration\n\u251c\u2500\u2500 board_com_api.h   # Board-level API declarations\n\u2514\u2500\u2500 board_com_api.c   # Board-level API implementation\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"boards/<platform>/Kconfig"})," file will be automatically updated to include the new board configuration options:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'config BOARD_CHOICE_MY_CUSTOM_BOARD\nbool "MY_CUSTOM_BOARD"\nif (BOARD_CHOICE_MY_CUSTOM_BOARD)\n    rsource "./MY_CUSTOM_BOARD/Kconfig"\nendif\n'})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsx)(n.p,{children:"Overview:"}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Verify compilation"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Modify the ",(0,o.jsx)(n.code,{children:"boards/<platform>/<board_name>/board_com_api.c"})," file to adapt the new development board"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Adjust configuration"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Save board-level default configuration file"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"verify-compilation",children:"Verify Compilation"}),"\n",(0,o.jsxs)(n.p,{children:["Use the command ",(0,o.jsx)(n.code,{children:"tos.py new project"})," to create a new project, enter the project directory."]}),"\n",(0,o.jsxs)(n.p,{children:["Use the command ",(0,o.jsx)(n.code,{children:"tos.py config choice"})," to select a configuration for the same chip platform."]}),"\n",(0,o.jsx)(n.p,{children:"The advantage of this is that it can save configuration time."}),"\n",(0,o.jsxs)(n.p,{children:["Then use the command ",(0,o.jsx)(n.code,{children:"tos.py config menu"})," to select the newly created development board."]}),"\n",(0,o.jsxs)(n.p,{children:["Execute the command ",(0,o.jsx)(n.code,{children:"tos.py build"})," to verify compilation."]}),"\n",(0,o.jsx)(n.h3,{id:"adapt-development-board",children:"Adapt Development Board"}),"\n",(0,o.jsxs)(n.p,{children:["Modify the ",(0,o.jsx)(n.code,{children:"boards/<platform>/<board_name>/board_com_api.c"})," file to adapt the new development board."]}),"\n",(0,o.jsxs)(n.p,{children:["Find the ",(0,o.jsx)(n.code,{children:"PERATE_RET board_register_hardware(void)"})," function in the file and modify it according to the hardware information of the new development board."]}),"\n",(0,o.jsx)(n.p,{children:"For example, add initialization code for peripherals such as KEY, LED, I2C, etc. This process can refer to existing development board implementations."}),"\n",(0,o.jsxs)(n.p,{children:["If you need to add other source files or header file directories, you can modify the ",(0,o.jsx)(n.code,{children:"CMakeLists.txt"})," file to configure the ",(0,o.jsx)(n.code,{children:"LIB_SRCS"})," and ",(0,o.jsx)(n.code,{children:"LIB_PUBLIC_INC"})," variables."]}),"\n",(0,o.jsx)(n.h3,{id:"adjust-configuration",children:"Adjust Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["Use the command ",(0,o.jsx)(n.code,{children:"tos.py config menu"})," to enter the configuration menu and adjust function options and parameters."]}),"\n",(0,o.jsx)(n.p,{children:"Combined with the previous step, verify functionality."}),"\n",(0,o.jsx)(n.h3,{id:"save-configuration",children:"Save Configuration"}),"\n",(0,o.jsxs)(n.p,{children:["Copy the ",(0,o.jsx)(n.code,{children:"app_default.config"})," file from the project directory to the ",(0,o.jsx)(n.code,{children:"boards/<platform>/config"})," directory."]}),"\n",(0,o.jsxs)(n.p,{children:["And rename it to ",(0,o.jsx)(n.code,{children:"<board_name>.config"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"This makes it convenient for other developers to use."}),"\n",(0,o.jsx)(n.h2,{id:"faq",children:"FAQ"}),"\n",(0,o.jsx)(n.h3,{id:"how-to-delete-a-created-board",children:"How to delete a created board"}),"\n",(0,o.jsxs)(n.p,{children:["Directly delete the ",(0,o.jsx)(n.code,{children:"boards/<platform>/<board_name>"})," directory and manually remove the related configuration from ",(0,o.jsx)(n.code,{children:"boards/<platform>/Kconfig"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"modify-the-name-of-an-already-created-board",children:"Modify the name of an already created board"}),"\n",(0,o.jsx)(n.p,{children:"Manual modification is required:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Rename the board directory"}),"\n",(0,o.jsx)(n.li,{children:"Update references in the platform Kconfig"}),"\n",(0,o.jsx)(n.li,{children:"Update the default values in the board's internal Kconfig"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);